{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","wordOne","wordTwo","SortType2","ALPHABET","localeCompare","LENGTH","length","NONE","getSortChoice","reverse","App","useState","setIsReversed","setSortType","className","type","classNames","onClick","prevState","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAqBK,SAASC,EACdC,EACAC,EACAC,GAEA,IAAMC,EAAY,YAAOH,GAczB,OAZAG,EAAaC,MACX,SACEC,EAASC,GADX,OApBJ,SAAuBD,EAAiBC,EAAiBC,GACvD,QAASA,GACP,KAAKV,EAASW,SACZ,OAAOH,EAAQI,cAAcH,GAC/B,KAAKT,EAASa,OACZ,OAAOL,EAAQM,OAASL,EAAQK,OAClC,KAAKd,EAASe,KACd,QACE,OAAOf,EAASe,MAcbC,CACHR,EAASC,EAASL,MAIlBC,GACFC,EAAaW,UAGRX,G,SArCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAwCE,IAAMkB,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOd,EAAP,KAAmBe,EAAnB,KACA,EAAgCD,mBAASnB,EAASe,MAAlD,mBAAOX,EAAP,KAAiBiB,EAAjB,KAmBA,IAAMd,EAAOH,EACPD,EAAQD,EACZD,EAAiBG,EAAUC,GAG7B,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,SAAU,WAAY,CAC1C,WAAYjB,IAASP,EAASW,WAEhCc,QA9BR,WACEJ,EAAYrB,EAASW,WAwBjB,iCAUA,wBACEY,KAAK,SACLD,UAAWE,IAAW,SAAU,aAAc,CAC5C,WAAYjB,IAASP,EAASa,SAEhCY,QApCR,WACEJ,EAAYrB,EAASa,SA8BjB,4BAUA,wBACEU,KAAK,SACLD,UAAWE,IAAW,SAAU,cAAe,CAC7C,YAA2B,IAAfnB,IAEdoB,QA1CR,WACEL,GAAc,SAAAM,GAAS,OAAMA,MAoCzB,sBAUEtB,IAAaJ,EAASe,OACJ,IAAfV,IACH,wBACEkB,KAAK,SACLD,UAAU,4BACVG,QAhDV,WACEL,GAAc,GACdC,EAAYrB,EAASe,OA2Cf,sBAWJ,6BACE,6BACGZ,EAAMwB,KACL,SAACC,GAAD,OACE,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,cCnItCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.16c44cbb.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nfunction getSortChoice(wordOne: string, wordTwo: string, SortType2: number) {\n  switch (+SortType2) {\n    case SortType.ALPHABET:\n      return wordOne.localeCompare(wordTwo);\n    case SortType.LENGTH:\n      return wordOne.length - wordTwo.length;\n    case SortType.NONE:\n    default:\n      return SortType.NONE;\n  }\n}\n\nexport function getReorderedGoods(\n  goods: string[],\n  sortType: number,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort(\n    (\n      wordOne, wordTwo,\n    ) => getSortChoice(\n      wordOne, wordTwo, sortType,\n    ),\n  );\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  function sortByAlphabet() {\n    setSortType(SortType.ALPHABET);\n  }\n\n  function sortByLength() {\n    setSortType(SortType.LENGTH);\n  }\n\n  function reverse() {\n    setIsReversed(prevState => (!prevState));\n  }\n\n  function reset() {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  }\n\n  const sort = sortType;\n  const goods = getReorderedGoods(\n    goodsFromServer, sortType, isReversed,\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames('button', 'is-info ', {\n            'is-light': sort !== SortType.ALPHABET,\n          })}\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button', 'is-success', {\n            'is-light': sort !== SortType.LENGTH,\n          })}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button', 'is-warning ', {\n            'is-light': isReversed !== true,\n          })}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.NONE\n          || isReversed === true) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        <ul>\n          {goods.map(\n            (good: string) => (\n              <li data-cy=\"Good\" key={good}>\n                {good}\n              </li>\n            ),\n          )}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}