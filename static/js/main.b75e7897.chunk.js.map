{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","wordOne","wordTwo","SortType2","ALPHABET","localeCompare","LENGTH","length","NONE","getSortChoice","reverse","App","useState","stateArray","setStateArray","className","type","classNames","onClick","prevState","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAyBK,SAASC,EACdC,EACAC,EACAC,GAEA,IAAMC,EAAY,YAAOH,GAczB,OAZAG,EAAaC,MACX,SACEC,EAASC,GADX,OApBJ,SAAuBD,EAAiBC,EAAiBC,GACvD,QAASA,GACP,KAAKV,EAASW,SACZ,OAAOH,EAAQI,cAAcH,GAC/B,KAAKT,EAASa,OACZ,OAAOL,EAAQM,OAASL,EAAQK,OAClC,KAAKd,EAASe,KACd,QACE,OAAO,GAcJC,CACHR,EAASC,EAASL,OAIH,IAAfC,GACFC,EAAaW,UAGRX,G,SAzCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA4CE,IAAMkB,EAAgB,WAC3B,MAAoCC,mBAAS,CAC3Cd,YAAY,EACZD,SAAU,IAFZ,mBAAOgB,EAAP,KAAmBC,EAAnB,KAgCA,IAAMd,EAAOa,EAAWhB,SAExB,OACE,sBAAKkB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,SAAU,CAC9B,mBAAoBjB,IAASP,EAASW,SACtC,UAAWJ,IAASP,EAASW,WAE/Bc,QAtCR,WACEJ,EAAc,CACZhB,YAAY,EACZD,SAAUJ,EAASW,YA6BjB,iCAWA,wBACEY,KAAK,SACLD,UAAWE,IAAW,SAAU,CAC9B,sBAAuBjB,IAASP,EAASa,OACzC,aAAcN,IAASP,EAASa,SAElCY,QA1CR,WACEJ,EAAc,CACZhB,YAAY,EACZD,SAAUJ,EAASa,UAiCjB,4BAWA,wBACEU,KAAK,SACLD,UAAWE,IAAW,SAAU,CAC9B,uBAAiD,IAA1BJ,EAAWf,WAClC,cAAwC,IAA1Be,EAAWf,aAE3BoB,QA9CR,WACEJ,GAAc,SAAAK,GAAS,MAAK,CAC1BrB,YAAaqB,EAAUrB,WAAYD,SAAUsB,EAAUtB,cAsCrD,sBAWEgB,EAAWhB,WAAaJ,EAASe,OACJ,IAA1BK,EAAWf,aACd,wBACEkB,KAAK,SACLD,UAAU,4BACVG,QAlDV,WACEJ,EAAc,CACZhB,YAAY,EACZD,SAAUJ,EAASe,QA4Cf,sBAWJ,6BACE,6BACGb,EACCD,EAAiBmB,EAAWhB,SAAUgB,EAAWf,YACjDsB,KACA,SAACC,GAAD,OACE,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,cCrJtCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b75e7897.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\n// type State = {\n//   isReversed: boolean,\n//   sortType: number,\n// }\nfunction getSortChoice(wordOne: string, wordTwo: string, SortType2: number) {\n  switch (+SortType2) {\n    case SortType.ALPHABET:\n      return wordOne.localeCompare(wordTwo);\n    case SortType.LENGTH:\n      return wordOne.length - wordTwo.length;\n    case SortType.NONE:\n    default:\n      return 0;\n  }\n}\n\nexport function getReorderedGoods(\n  goods: string[],\n  sortType: number,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort(\n    (\n      wordOne, wordTwo,\n    ) => getSortChoice(\n      wordOne, wordTwo, sortType,\n    ),\n  );\n\n  if (isReversed === true) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [stateArray, setStateArray] = useState({\n    isReversed: false,\n    sortType: 0,\n  });\n\n  function sortByAlphabet() {\n    setStateArray({\n      isReversed: false,\n      sortType: SortType.ALPHABET,\n    });\n  }\n\n  function sortByLength() {\n    setStateArray({\n      isReversed: false,\n      sortType: SortType.LENGTH,\n    });\n  }\n\n  function reverse() {\n    setStateArray(prevState => ({\n      isReversed: !prevState.isReversed, sortType: prevState.sortType,\n    }));\n  }\n\n  function reset() {\n    setStateArray({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  }\n\n  const sort = stateArray.sortType;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames('button', {\n            'is-info is-light': sort !== SortType.ALPHABET,\n            'is-info': sort === SortType.ALPHABET,\n          })}\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button', {\n            'is-success is-light': sort !== SortType.LENGTH,\n            'is-success': sort === SortType.LENGTH,\n          })}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button', {\n            'is-warning is-light': stateArray.isReversed !== true,\n            'is-warning': stateArray.isReversed === true,\n          })}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {(stateArray.sortType !== SortType.NONE\n          || stateArray.isReversed === true) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        <ul>\n          {getReorderedGoods(\n            goodsFromServer, stateArray.sortType, stateArray.isReversed,\n          ).map(\n            (good: string) => (\n              <li data-cy=\"Good\" key={good}>\n                {good}\n              </li>\n            ),\n          )}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}